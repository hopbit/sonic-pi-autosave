## sample control 27/3/15 - 30/3/15
#seed = 1
#seed = 11111
seed = 987

define :sample_for do |smpl, rest|
  sd = sample_duration(smpl)
  sample smpl, rate: sd/rest
  sleep rest
end

define :player do |base, oct, syn|
  use_synth syn
  dur = choose(knit(0.125, 8, 0.25, 4, 0.5, 1))
  play scale(base, :phrygian, num_octaves: oct).choose, release: dur*1.3, amp: 0.5
  sleep dur
end

define :play_thread do |base, oct|
  use_random_seed seed
  in_thread do
    loop do
      player base, oct, :prophet
    end
  end
end

t = 0 #make the active thread globally accessible
define :play_for do |base, rest|
  t = play_thread base, 1
  sleep (rest - 0.125)
  t.kill

  sleep 0.125
end

define :beat do
  in_thread do
    loop do
      sample :drum_heavy_kick
      sample :drum_cymbal_closed, amp: 0.5
      sleep 0.25
      sample :drum_cymbal_closed, amp: 0.5
      sleep 0.25
    end
  end
end

define :smpl do
  in_thread do
    loop do
      sample_for :loop_mika, 8
    end
  end
end

define :bass do
  in_thread do
    loop do
      player :a1, 1, :fm
    end
  end
end

define :bass303 do
  in_thread do
    loop do
      player :a1, 1, :tb303
    end
  end
end

define :melody do
  in_thread do
    loop do
      play_for :a2, 8
      play_for :a3, 8
      play_for :a4, 8
    end
  end
end

## start kicking things off
use_random_seed seed
beat_t = beat
bass_t = bass

b303_t = bass303

smpl_t = smpl
sleep 8
melody_t = melody


# this adds some extra randomisation to make things more interesting
16.times do
  sleep 16
  seed = seed * 2
end

smpl_t.kill
b303_t.kill
sleep 8
t.kill # hacky but I don't know how to otherwise kill the active child thread
bass_t.kill
beat_t.kill
melody_t.kill